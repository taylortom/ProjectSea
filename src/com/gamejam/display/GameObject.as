package com.gamejam.display{	// Flash imports	import com.gamejam.managers.LevelManager;	import flash.display.MovieClip;	import flash.events.Event;	import flash.geom.Point;	import com.gamejam.views.GameView;	/*	 * A basic game object 	 */	public class GameObject extends MovieClip 	{			private var _collideable:Boolean = false;		private var _moveable:Boolean = false		private var _position:Point;				public function GameObject()		{			this._position = new Point();			var gv:GameView = GameView.getInstance();			gv.addGameObject(this);			this.addEventListener(Event.ENTER_FRAME, onUpdate);		}				protected function onUpdate(e:Event):void 		{			if (this._moveable) { _move(); }			this._updateScreenCoords();		}				protected function _move():void 		{			// to be overridden by subclasses unless it's to remain still onscreen		}				protected function _updateScreenCoords():void 		{			//if(this is SeaFront){				//trace("this: " + this + ", this._position.x: " + this._position.x + ", this._position.y: " + this._position.y + ", camera.position.y: " + GameView.getInstance().camera.position.y + ", level length: " + LevelManager.getInstance().currentLevel.length);			//}			this.x = this._position.x;			this.y = this._position.y - GameView.getInstance().camera.position.y;		}				public function get collideable():Boolean { return this._collideable; }		public function set collideable(isCollideable):void { this._collideable = isCollideable; }				public function get moveable():Boolean { return this._moveable; }		public function set moveable(isMoveable):void { this._moveable = isMoveable; }				public function get position():Point { return _position; }		public function set position(value:Point):void { _position = value; }	}}